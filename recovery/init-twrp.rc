on early-init
    start ueventd

on init
    export PATH /sbin
    export LD_LIBRARY_PATH .:/sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc
    symlink /sbin/busybox /sbin/sh

    chmod 0755 /sbin/busybox

    mkdir /boot
    mkdir /sdcard
    mkdir /sd-ext
    mkdir /datadata
    mkdir /emmc
    mkdir /system
    mkdir /data
    mkdir /cache
    mount /tmp /tmp tmpfs

on boot

    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

service ueventd /sbin/ueventd
    critical

service choice_fn /sbin/choice_fn
    oneshot

service mfgsrv /sbin/mfgsrv -i -t /dev/ttyS0
    disabled

service dmesg /sbin/busybox dmesg -n 1
    oneshot

service recovery /sbin/recovery
    disabled

service adbd /sbin/adbd recovery
    disabled

service htcbatt /sbin/htcbatt
    oneshot

service offmode_charging /sbin/offmode_charging
    disabled
    oneshot

service detect_key /sbin/detect_key
    disabled
    oneshot

# Always start adbd on userdebug and eng builds
# In recovery, always run adbd as root.
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 0bb4
    write /sys/class/android_usb/android0/idProduct 0c07
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/enable 1
    write /sys/class/android_usb/android0/iManufacturer $ro.product.manufacturer
    write /sys/class/android_usb/android0/iProduct $ro.product.model
    write /sys/class/android_usb/android0/iSerial $ro.serialno
    start adbd
    setprop service.adb.root 1

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
